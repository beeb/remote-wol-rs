name: Build

on:
  workflow_dispatch:

jobs:
  lint:
    uses: ./.github/workflows/lint.yml

  wasm-build:
    name: build frontend files
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: wasm32-unknown-unknown

      - name: install cargo-leptos
        run: cargo install --locked cargo-leptos

      - name: compile CSS
        uses: ZoeyVid/tailwindcss-update@main
        with:
          input: style/input.css
          output: style/output.css
          params: '--minify'

      - name: cargo leptos build
        run: cargo leptos build --release

      - name: upload frontend files
        uses: actions/upload-artifact@v3
        with:
          name: pkg
          path: target/site/pkg
          if-no-files-found: error

  bin-build:
    name: build server on ${{ matrix.os }}
    needs: [wasm-build]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: install rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        if: matrix.os != 'ubuntu-latest'

      - name: install rust toolchain with aarch64 target
        uses: dtolnay/rust-toolchain@nightly
        if: matrix.os == 'ubuntu-latest'
        with:
          targets: aarch64-unknown-linux-gnu

      - name: install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
        if: matrix.os == 'ubuntu-latest'

      - name: download frontend files
        uses: actions/download-artifact@v3
        with:
          name: pkg
          path: target/site/pkg

      - name: build native
        run: cargo build --package=remote_wol --bin=remote_wol --target-dir=target/server --no-default-features --features=ssr --release

      - name: cross build
        if: matrix.os == 'ubuntu-latest'
        run: cross build -v --package=remote_wol --bin=remote_wol --target-dir=target/server --no-default-features --features=ssr --release --target aarch64-unknown-linux-gnu

      - name: upload native binary
        uses: actions/upload-artifact@v3
        if: matrix.os != 'windows-latest'
        with:
          name: ${{ matrix.os }}
          path: target/server/release/remote_wol
          if-no-files-found: error

      - name: upload native binary (windows)
        uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: ${{ matrix.os }}
          path: target/server/release/remote_wol.exe
          if-no-files-found: error

      - name: upload aarch64 binary
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: ${{ matrix.os }}-aarch64
          path: target/server/aarch64-unknown-linux-gnu/release/remote_wol
          if-no-files-found: error
